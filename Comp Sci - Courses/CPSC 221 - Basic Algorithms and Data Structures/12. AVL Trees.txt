• Removing Node
- Series of steps (must follow carefully): https://www.students.cs.ubc.ca/~cs-221/2019W2/lectures/slides/GT/16-bst3-rotation-203-1201.pdf

• Altenrative to Removing Node
- Just change the value of the removed node with the predecessor or successor
- Then  reattach the predecessor/successor's child to the parent of the predecessor/successor

• How to know if a tree is balanced
Each node's left and right subtrees differ in height by at most 1
(Reminder, height means the length of a node to get to a leaflet)
If a tree is imbalanced, rotate it to maintain the balanced property

• Rotation
- Not all trees are O(log n), some are O(n) when the tree is imbalanced (think of a tall and thin tree)
- Rotate to make a tree complete/shorter/O(log n)
- You rotate anytime after insertion or deletion to ensure the tree remain balanced

• AVL Trees
- Insertion begins with ordinary BST insertion followed by rotations to maintain balance