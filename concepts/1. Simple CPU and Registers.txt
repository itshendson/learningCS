https://www.youtube.com/watch?v=SzV4l0_1MCQ
https://www.cs.ubc.ca/~feeley/cs213/2011w1/resources/companion.pdf (Ch 1, 2.1)

Combination Circuits - Where an output is based ONLY on a present input. Combination circuit uses static information.

Sequential Circuits - Where an output is based on both an present input AND a previous output. Because there is a previous output, memory is needed to store that previous output. Sequential Circuits uses dynamic information. The input comes from a register. The output comes out to the same register. 

There is also a third input, called F. F is a number that selects one of several functions. For example F= 4 could mean A + B. F = 3 could mean A * B.

Clock - Determines when a circuit executes. Clocks have ticks (usually the rising edge) that goes from low to high repeatedly at a frequency. There are many signals/inputs that goes to the circuit. We don't want these signals/inputs to be executed randomly. The clock regulates that to ensure there is order and sequence to these signals/inputs.  

Memory - Short term storage. Data is wiped when computer shuts off (eg. RAM). Memory can be thought of as a long tape of bytes. Each byte has an address. The address is just an integer (eg. 132)

Storage - Persistent storage of data that exists even after computer is turned off (eg. writing on discs, hard drive, SSDs)

---

Bit is a 1 or 0. Every integers (eg. 1, 238, -71, etc) can be represented by 32 bits.

Bytes is 8 bits. Since it takes 32 bits to represent an integer and it takes 8 bits to represent a byte. An integer also represents 4 bytes. 

Array of Integers - if you have an array of length 3, you basically need 3 bytes stored in memory. 

Converting Integers to Binary

Hexadecimal starts with 0x. Hexadecimal is a base 16 system. You can represent 2 bytes with a hexadecimal 

When storing hexadecimal on the "memory tape" you can do it "left to right" or "right to left" as long as it is consistently like that in the computer it's acceptable. However when communicating data over a network, then there might be inconsistencies. 

Endianess: How do we store hexadecimals in a 8 bit system? Left to right (big endian) or right to left (little endian)? 



---

Arithmetic and Logic Unit (ALU) - has 2 inputs, an operation code, an output (with a destination), and an immediate value (aka the value that is not currently in the register). 

A sequential circuit is basically an ALU + register?

